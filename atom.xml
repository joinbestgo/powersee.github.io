<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Powersee的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://powersee.GitHub.io/"/>
  <updated>2019-10-30T06:25:07.864Z</updated>
  <id>https://powersee.GitHub.io/</id>
  
  <author>
    <name>powersee</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于玩客云的一些资料</title>
    <link href="https://powersee.GitHub.io/2019/10/about-wankeyun/"/>
    <id>https://powersee.GitHub.io/2019/10/about-wankeyun/</id>
    <published>2019-10-30T05:38:07.000Z</published>
    <updated>2019-10-30T06:25:07.864Z</updated>
    
    <content type="html"><![CDATA[<p>玩客云能做什么？1、下载迅雷可以下载的内容。2、当私人网盘来使用，出门在外时，也可访问家中硬盘中的文件。</p><p>那它有什么缺点？最大的缺点是，会不停往硬盘存东西。因此会加大硬盘损耗，以及占用带宽。</p><p>下面是关于玩客云，个人收集的一些资料。</p><a id="more"></a><h2 id="问：现在入手什么版本最好啊？（这个是几个月前的回答了，现在没什么用，一律买最便宜的就行）"><a href="#问：现在入手什么版本最好啊？（这个是几个月前的回答了，现在没什么用，一律买最便宜的就行）" class="headerlink" title="问：现在入手什么版本最好啊？（这个是几个月前的回答了，现在没什么用，一律买最便宜的就行）"></a>问：现在入手什么版本最好啊？（这个是几个月前的回答了，现在没什么用，一律买最便宜的就行）</h2><ul><li><p>看你的用途吧。。。想要挖矿的就去买开了挖矿的，不需要挖矿、只想下载和当网盘用的买退出挖矿的或者未拆封的，要刷机或者装组件(如transmission、apache、nginx、php、mysql等)玩的买root的。</p></li><li><p>之前买了一个全新未拆封的，没有开通链克计划，硬盘是可以休眠的</p></li></ul><h2 id="玩客云限制上传的方法（最好电脑上操作）"><a href="#玩客云限制上传的方法（最好电脑上操作）" class="headerlink" title="玩客云限制上传的方法（最好电脑上操作）"></a>玩客云限制上传的方法（最好电脑上操作）</h2><ul><li><p>1、显示隐藏的文件，看到一个.onething_data的文件夹，删除了。</p></li><li><p>2、打开记事本，什么都不需要，直接另存为—保存类型选择为所有文件，文件名为.onething_data</p></li><li><p>丢到玩客云硬盘的根目录上，设置为只读的属性，完事。</p></li><li><ul><li>反正我这么搞，不会上班，远程访问也没毛病，一天还有0.几个蛋。大不了被绝育，能下载，能当家庭云用就行！</li></ul></li></ul><hr><p>很多人不满玩客云一直读写硬盘的这种行为，于是申请退出玩客链计划，当时想退出却没那么容易。因为迅雷要求你必须手持身份证，拍一张照片给他们，才愿意帮你退出计划。这想想还是挺可怕，谁知道照片会被拿去干什么事啊。但是在 张大妈 有这样一个有趣的例子。</p><p>与客服互怼成功拒绝提供身份证</p><p><a href="https://post.smzdm.com/p/az59706n/" target="_blank" rel="noopener">https://post.smzdm.com/p/az59706n/</a></p><p>同时这上面还有一篇非常详细的评测</p><p><a href="https://post.smzdm.com/p/aw3np922/" target="_blank" rel="noopener">https://post.smzdm.com/p/aw3np922/</a></p><p>B 站上面也有教</p><p><span style="color: rgb(34, 34, 34);">不让其不停读取硬盘的四种方案（</span><a href="https://www.bilibili.com/video/av53589623" target="_blank" rel="noopener">https://www.bilibili.com/video/av53589623</a><span style="color: rgb(34, 34, 34);">）</span></p><ul><li><p><span style="color: rgb(34, 34, 34);">① .onething_data文件夹封闭 具体操作看之前视频</span></p></li><li><p><span style="color: rgb(34, 34, 34);">② 发邮件退出玩客云奖励计划</span></p></li><li><p><span style="color: rgb(34, 34, 34);">③ 用闲置U盘或TF卡做主盘避免写入机械硬盘</span></p></li><li><p><span style="color: rgb(34, 34, 34);">④ 不用时弹出硬盘 使用时远程重启</span></p></li></ul><h2 id="用-Linux-禁止其读写的方法：（此方法本人测试无效，因为玩客云根本不能识别-ext4-格式的硬盘）"><a href="#用-Linux-禁止其读写的方法：（此方法本人测试无效，因为玩客云根本不能识别-ext4-格式的硬盘）" class="headerlink" title="用 Linux 禁止其读写的方法：（此方法本人测试无效，因为玩客云根本不能识别 ext4 格式的硬盘）"></a>用 Linux 禁止其读写的方法：（此方法本人测试无效，因为玩客云根本不能识别 ext4 格式的硬盘）</h2><ul><li><span style="color: rgb(34, 34, 34);">直接第一种覆盖就行 而且他不会改回来 但是需要把硬盘搞成ext4 同时设置该文件的用户组为root 再修改文件属性不可修改 以上操作在linux下进行</span></li></ul><h2 id="挂载到电脑的方法："><a href="#挂载到电脑的方法：" class="headerlink" title="挂载到电脑的方法："></a>挂载到电脑的方法：</h2><ul><li>Win + r 输入 //ip</li></ul><h2 id="我个人对于这台设备的评价"><a href="#我个人对于这台设备的评价" class="headerlink" title="我个人对于这台设备的评价"></a>我个人对于这台设备的评价</h2><p>我认为，对于下载，有这台设备还是不错的，因为它让我们在没有迅雷会员的情况下，也可以高速下载。当然前提是你下载的资源迅雷的服务器里面有。不过随着现在版权管理越来越严，迅雷能下载的东西也越来越少了。</p><p>对于当私人云盘，我看有人专门买两台这个来当私人云盘，不过买的硬盘盒都比机器贵。我个人是不会把手机的图片、视频放这的，不太敢，也没必要。</p><p>所以这台机器对我确实没多大用处，大多数情况下都是出于吃灰状态。不过也无所谓了，五六十块钱的东西，买来折腾折腾过过瘾也就值得了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;玩客云能做什么？1、下载迅雷可以下载的内容。2、当私人网盘来使用，出门在外时，也可访问家中硬盘中的文件。&lt;/p&gt;
&lt;p&gt;那它有什么缺点？最大的缺点是，会不停往硬盘存东西。因此会加大硬盘损耗，以及占用带宽。&lt;/p&gt;
&lt;p&gt;下面是关于玩客云，个人收集的一些资料。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>小钢炮又被折腾坏记录，最终成功用上 zsh</title>
    <link href="https://powersee.GitHub.io/2019/10/nano-zsh/"/>
    <id>https://powersee.GitHub.io/2019/10/nano-zsh/</id>
    <published>2019-10-26T11:31:39.000Z</published>
    <updated>2019-10-28T00:34:08.442Z</updated>
    
    <content type="html"><![CDATA[<p>刚才给小钢炮安装了 zsh ，这个过程还是有点复杂的，不过好在都能找到教程。</p><a id="more"></a><h2 id="1、先去看灯大的这个文章"><a href="#1、先去看灯大的这个文章" class="headerlink" title="1、先去看灯大的这个文章"></a>1、先去看灯大的这个文章</h2><p><a href="https://gitee.com/8ox86/phicomm-n1-issue/wikis/entware%20guide?sort_id=1368793" target="_blank" rel="noopener">https://gitee.com/8ox86/phicomm-n1-issue/wikis/entware%20guide?sort_id=1368793</a></p><p>让我们可以用 opkg2 来安装其它应用</p><h2 id="2、安装-zsh-与配置集"><a href="#2、安装-zsh-与配置集" class="headerlink" title="2、安装 zsh 与配置集"></a>2、安装 zsh 与配置集</h2><p>于是我就安装了 zsh 以及 oh my zsh 为的就是用这个自动补全插件 zsh-autosuggestions</p><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">opkg2 <span class="keyword">install</span> zsh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>"</span></span><br></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">git clone git:<span class="regexp">//gi</span>thub.com<span class="regexp">/zsh-users/</span>zsh-autosuggestions <span class="variable">$ZSH_CUSTOM</span><span class="regexp">/plugins/</span>zsh-autosuggestions</span><br></pre></td></tr></table></figure><h2 id="3、遇坑部分，无法-ssh-连接"><a href="#3、遇坑部分，无法-ssh-连接" class="headerlink" title="3、遇坑部分，无法 ssh 连接"></a>3、遇坑部分，无法 ssh 连接</h2><p>顺利地安装成功了，然后，我想将 zsh 设置为默认的 shell ，使用 chsh -s /opt/bin/zsh 却失败了。</p><p>然后网上找其它方法，看到有个是修改 /etc/passwd 这个文件，第一行就是 root 用户的默认 shell 路径，于是用 vim 修改这个文件，改为 zsh 的路径，然后退出，再重新 ssh 连接，就登录不了了……</p><p><img src="/img/2019/can&#39;t login after edit the passwd.jpg" alt=""></p><p>本想这次扑街了，又得重装系统了，可惜 qb 的配置没有备份……</p><h2 id="4、想办法备份"><a href="#4、想办法备份" class="headerlink" title="4、想办法备份"></a>4、想办法备份</h2><p>于是想办法看看能不能备份出来，不然重装系统后所有记录都没了。想到 qb 的配置文件是放在 /var/lib/qbittorrent 这个文件夹里的，之前我是 ssh 之后，把复制到自己的硬盘的。现在无法 ssh，得另寻方法。</p><p>于是想到小钢炮的 web 界面有个定时任务的功能 Scheduled Tasks ，在这个我也可以执行命令啊，那我在这里备份这个文件夹不就行了。</p><p>同时灯大的 wiki 里也有写备份 qb 和 tr 的方法，他是用 tar 来打包这个文件夹的，这种可能更好吧。</p><p>于是我添加了这条任务，每十五分钟就将这两个文件夹打包备份到我这个叫 one 的硬盘里。</p><figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line"><span class="number">15</span> * * * * tar cvf /media/one/qb.tar /var/<span class="class"><span class="keyword">lib</span>/<span class="title">qbittorrent</span> &amp;&amp; <span class="title">tar</span> <span class="title">cvf</span> /<span class="title">media</span>/<span class="title">one</span>/<span class="title">tr</span>.<span class="title">tar</span> /<span class="title">var</span>/<span class="title">lib</span>/<span class="title">transmission</span></span></span><br></pre></td></tr></table></figure><h2 id="5、曲线救国"><a href="#5、曲线救国" class="headerlink" title="5、曲线救国"></a>5、曲线救国</h2><p>所以这样打包好后，就可以重装系统了嘛。不过我突然想到，既然这里可以执行命令，那我在这里修改 passwd 这个文件，改回去不就行了？</p><p>于是我将 passwd 这个文件的内容，输出到硬盘里</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">cat <span class="regexp">/etc/</span>passwd &gt; <span class="regexp">/media/</span>one<span class="regexp">/pass.txt</span></span><br></pre></td></tr></table></figure><p>接着我用 filebrowser 修改这个文档里面的内容，再把它输入回 passwd</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">cat <span class="regexp">/media/</span>one<span class="regexp">/pass.txt &gt; /</span>etc<span class="regexp">/passwd</span></span><br></pre></td></tr></table></figure><p>完成，再来 ssh ，就成功登录上了。</p><p>但是我的 zsh 还是没办法设置为默认 shell ……</p><p>怎么办呢？</p><h2 id="6、用上-zsh"><a href="#6、用上-zsh" class="headerlink" title="6、用上 zsh"></a>6、用上 zsh</h2><p>我想到，当我们用 ssh 连接上小钢炮的 sh 时，它会去执行 /etc/prifile 这个文件里面的内容，那我直接在这里面添加一行</p><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">zsh</span></span><br></pre></td></tr></table></figure><p>我将它放在环境变量之后，在 13 行这个位置。这样之后用 ssh 连接，系统就会先启动 sh ，然后读取 /etc/prifile 的内容，读到 13 行，执行了 zsh 这个命令，然后 shell 就自动切换到 zsh 了。</p><p>由于这个过程很快，我们不可能看到，所以一连接上看到的就是 zsh 了。完美！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;刚才给小钢炮安装了 zsh ，这个过程还是有点复杂的，不过好在都能找到教程。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>小米手机免 root 去除广告以及卸载系统应用</title>
    <link href="https://powersee.GitHub.io/2019/09/MIUI-adb/"/>
    <id>https://powersee.GitHub.io/2019/09/MIUI-adb/</id>
    <published>2019-09-18T03:27:35.000Z</published>
    <updated>2019-10-21T09:56:51.034Z</updated>
    
    <content type="html"><![CDATA[<p>本文需在电脑上进行。</p><a id="more"></a><h2 id="手机打开-USB-调试"><a href="#手机打开-USB-调试" class="headerlink" title="手机打开 USB 调试"></a>手机打开 USB 调试</h2><p>以及 USB 调试（安全模式）</p><h2 id="下载-ADB-工具"><a href="#下载-ADB-工具" class="headerlink" title="下载 ADB 工具"></a>下载 ADB 工具</h2><p><a href="http://veger.ys168.com/" target="_blank" rel="noopener">http://veger.ys168.com/</a><br>在电脑软件这个文件夹里</p><p>解压后把三个文件，解压到 <code>C:\Windows\</code>里面</p><h2 id="安装小米刷机工具（安装手机驱动）"><a href="#安装小米刷机工具（安装手机驱动）" class="headerlink" title="安装小米刷机工具（安装手机驱动）"></a>安装小米刷机工具（安装手机驱动）</h2><p><a href="http://bigota.d.miui.com/tools/MiFlash2018-5-28-0.zip" target="_blank" rel="noopener">http://bigota.d.miui.com/tools/MiFlash2018-5-28-0.zip</a></p><h2 id="电脑打开-cmd"><a href="#电脑打开-cmd" class="headerlink" title="电脑打开 cmd"></a>电脑打开 cmd</h2><p>删除应用的 ADB 命令是：<br><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">adb shell pm uninstall --<span class="keyword">user</span> <span class="title">0</span> 应用包名</span><br></pre></td></tr></table></figure></p><p>（MIUI 9、MIUI 10 测试删除后能正常开机使用）<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">adb shell pm uninstall --user <span class="number">0</span>  com<span class="selector-class">.miui</span><span class="selector-class">.systemAdSolution</span> （小米系统广告解决方案 必删）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span>  com<span class="selector-class">.miui</span><span class="selector-class">.analytics</span> （小米广告分析，必删）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.xiaomi</span><span class="selector-class">.gamecenter</span><span class="selector-class">.sdk</span><span class="selector-class">.service</span> （小米游戏中心服务）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.xiaomi</span><span class="selector-class">.gamecenter</span> （小米游戏中心）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.sohu</span><span class="selector-class">.inputmethod</span><span class="selector-class">.sogou</span><span class="selector-class">.xiaomi</span> （搜狗输入法）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.miui</span><span class="selector-class">.player</span> （小米音乐）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.miui</span><span class="selector-class">.video</span> （小米视频）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.miui</span><span class="selector-class">.notes</span> （小米便签）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.miui</span><span class="selector-class">.translation</span><span class="selector-class">.youdao</span> （有道翻译）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.miui</span><span class="selector-class">.translation</span><span class="selector-class">.kingsoft</span> （金山翻译）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.android</span><span class="selector-class">.email</span> （邮件）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.xiaomi</span><span class="selector-class">.scanner</span> （小米扫描）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.miui</span><span class="selector-class">.hybrid</span> （混合器）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.miui</span><span class="selector-class">.bugreport</span> （bug 反馈）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.milink</span><span class="selector-class">.service</span> （米连服务）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.android</span><span class="selector-class">.browser</span> （浏览器）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.miui</span><span class="selector-class">.gallery</span> （相册）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.miui</span><span class="selector-class">.yellowpage</span> （黄页）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.xiaomi</span><span class="selector-class">.midrop</span> （小米快传）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.miui</span><span class="selector-class">.virtualsim</span> （小米虚拟器）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.xiaomi</span><span class="selector-class">.payment</span> （小米支付）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.mipay</span><span class="selector-class">.wallet</span> （小米钱包）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.android</span><span class="selector-class">.soundrecorder</span> （录音机）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.miui</span><span class="selector-class">.screenrecorder</span> （屏幕录制）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.android</span><span class="selector-class">.wallpaper</span> （壁纸）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.miui</span><span class="selector-class">.voiceassist</span> （语音助手）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.miui</span><span class="selector-class">.fm</span> （收音机）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.miui</span><span class="selector-class">.touchassistant</span> （悬浮球）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.android</span><span class="selector-class">.cellbroadcastreceiver</span> （小米广播）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.xiaomi</span><span class="selector-class">.mitunes</span> （小米助手）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.xiaomi</span><span class="selector-class">.pass</span> （小米卡包）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.android</span><span class="selector-class">.thememanager</span> （个性主题管理）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.android</span><span class="selector-class">.wallpaper</span> （动态壁纸）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.android</span><span class="selector-class">.wallpaper</span><span class="selector-class">.livepicker</span> （动态壁纸获取）  </span><br><span class="line">adb shell pm uninstall --user <span class="number">0</span> com<span class="selector-class">.miui</span><span class="selector-class">.klo</span><span class="selector-class">.bugreport</span> （KLO bug 反馈）</span><br></pre></td></tr></table></figure></p><p>前面两个是 MIUI 系统支撑广告及精准化推送的应用，应第一时间删除，删除后不会出现无法开机的情况。这样 MIUI 系统的广告就会少很多——没有验证是否完全屏蔽。  </p><p><strong>【警告】以下系统自带应用删除后必定无法正常开机（来自网络），请避免误删：</strong>  </p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">com<span class="selector-class">.miui</span><span class="selector-class">.cloudservice</span> （小米云服务）  </span><br><span class="line">com<span class="selector-class">.xiaomi</span><span class="selector-class">.account</span> （小米账户）  </span><br><span class="line">com<span class="selector-class">.miui</span><span class="selector-class">.cloudbackup</span> （云备份）  </span><br><span class="line">com<span class="selector-class">.xiaomi</span><span class="selector-class">.market</span> （应用市场）</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文需在电脑上进行。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>服务器搭建全能下载器 Aria2 以及私人网盘，只需一行命令（docker）</title>
    <link href="https://powersee.GitHub.io/2019/09/docker-aria2/"/>
    <id>https://powersee.GitHub.io/2019/09/docker-aria2/</id>
    <published>2019-09-16T11:40:18.000Z</published>
    <updated>2019-10-21T09:56:51.037Z</updated>
    
    <content type="html"><![CDATA[<p>本文将利用 docker 一键安装 Aria2 和 filebrowser。</p><a id="more"></a><p>建议搭配之前的文章来观看：<a href="/2019/08/docker-qb">用服务器来离线下载 BT 种子，体验千兆网络的魅力</a></p><p><a href="https://github.com/wahyd4/aria2-ariang-docker/blob/master/README.CN.md" target="_blank" rel="noopener">项目 GitHub 地址</a></p><h3 id="安装-docker-如果机器没有的话）"><a href="#安装-docker-如果机器没有的话）" class="headerlink" title="安装 docker(如果机器没有的话）"></a>安装 docker(如果机器没有的话）</h3><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">curl -sSL http<span class="variable">s:</span>//<span class="built_in">get</span>.docker.<span class="keyword">com</span>/ | <span class="keyword">sh</span></span><br></pre></td></tr></table></figure><h3 id="最快速启动"><a href="#最快速启动" class="headerlink" title="最快速启动"></a>最快速启动</h3><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">docker run -d --name aria2-ui -v <span class="regexp">/home/</span><span class="string">down:</span><span class="regexp">/data -p 80:80 wahyd4/</span>aria2-ui</span><br></pre></td></tr></table></figure><ul><li>Aria2: <a href="http://yourip/ui/" target="_blank" rel="noopener">http://yourip/ui/</a></li><li>FileManger: <a href="http://yourip" target="_blank" rel="noopener">http://yourip</a></li><li>请使用 admin/admin 进行登录</li></ul><p>这样下载的文件都放在 <code>/home/down</code> 这个文件夹里面</p><p>文件夹没有写入权限，有兴趣看这篇文章了解 <a href="https://note.qidong.name/2018/01/docker-volume-permission/" target="_blank" rel="noopener">文章链接</a><br>不管原理，无脑给予 777</p><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">chmod <span class="number">777</span> /<span class="built_in">home</span>/down</span><br></pre></td></tr></table></figure><p>强制删除容器</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">docker</span> rm -f aria2-ui</span><br></pre></td></tr></table></figure><h3 id="加密下载界面"><a href="#加密下载界面" class="headerlink" title="加密下载界面"></a>加密下载界面</h3><figure class="highlight haml"><table><tr><td class="code"><pre><span class="line">docker run -d --name ariang \</span><br><span class="line">  -<span class="ruby">p <span class="number">80</span><span class="symbol">:</span><span class="number">80</span> \</span></span><br><span class="line"><span class="ruby">  -e PUID=<span class="number">1000</span> \</span></span><br><span class="line"><span class="ruby">  -e PGID=<span class="number">1000</span> \</span></span><br><span class="line"><span class="ruby">  -e ENABLE_AUTH=<span class="literal">true</span> \</span></span><br><span class="line"><span class="ruby">  -e RPC_SECRET=Hello \</span></span><br><span class="line"><span class="ruby">  -e ARIA2_SSL=<span class="literal">false</span> \</span></span><br><span class="line"><span class="ruby">  -e ARIA2_USER=user \</span></span><br><span class="line"><span class="ruby">  -e ARIA2_PWD=pwd \</span></span><br><span class="line"><span class="ruby">  -v /home/<span class="symbol">down:</span>/data \</span></span><br><span class="line"><span class="ruby">  wahyd4/aria2-ui</span></span><br></pre></td></tr></table></figure><ul><li>用户名：user</li><li>密码：pwd</li></ul><h3 id="后续补充"><a href="#后续补充" class="headerlink" title="后续补充"></a>后续补充</h3><p>根据个人的需求来选择，如果觉得不需要加密 Aria2 的管理界面的，其实用第一种方式就行了。非常简单，一行命令即可。</p><p>同时也可以结合 APP ：Transdrone_2.5.15.apk 来使用，这个我放在网盘里，使用它来管理多个下载工具也是比较方便的。</p><p><a href="http://veger.ys168.com/" target="_blank" rel="noopener">http://veger.ys168.com/</a></p><p><img src="https://i.loli.net/2019/09/30/SZ4jLRqiB5dzNgF.png" alt="transdrone"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文将利用 docker 一键安装 Aria2 和 filebrowser。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>BT挂机利器 transmission docker 安装法</title>
    <link href="https://powersee.GitHub.io/2019/09/transmission-docker/"/>
    <id>https://powersee.GitHub.io/2019/09/transmission-docker/</id>
    <published>2019-09-07T14:11:40.000Z</published>
    <updated>2019-10-21T09:56:51.040Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍如何在服务器上安装 docker，并安装 transmission 来下载 BT 种子任务。并且取回本地。</p><a id="more"></a><blockquote><p>要想进行下面的操作，需要有一个服务器，如果你没有的话， <a href="https://www.vultr.com/?ref=8161953-4F" target="_blank" rel="noopener">点此链接注册充值 10 美元送 50 美元</a><br>送的 50美元只有一个月的有效期。（所以不要省，开贵点的机器吧）</p></blockquote><p>上次已经用 docker 安装了 qbittorrent，这是一个非常强大的 BT 软件，我个人是非常喜欢的。但是，它占的内存比较大，如果服务器还要做一些其它的工作，用这个可能就不太合适了。</p><p><img src="https://i.loli.net/2019/09/10/lJAEmdBpbHKe4u5.png" alt="qb speed"></p><p>于是， transmission 是一个不错的选择。它对硬件的配置要求非常的低，甚至在路由器上面都可以运行。</p><blockquote><p>这次使用一台纯净系统的服务器来装。</p></blockquote><h3 id="安装-docker"><a href="#安装-docker" class="headerlink" title="安装 docker"></a>安装 docker</h3><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">curl -sSL http<span class="variable">s:</span>//<span class="built_in">get</span>.docker.<span class="keyword">com</span>/ | <span class="keyword">sh</span></span><br></pre></td></tr></table></figure><h3 id="安装-transmission"><a href="#安装-transmission" class="headerlink" title="安装 transmission"></a>安装 transmission</h3><figure class="highlight haml"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">-<span class="ruby">-restart=always \</span></span><br><span class="line"><span class="ruby">--name transmission \</span></span><br><span class="line"><span class="ruby">-v /home/tr/<span class="symbol">torrents:</span>/to_download \</span></span><br><span class="line"><span class="ruby">-v /home/tr/<span class="symbol">download:</span>/output \</span></span><br><span class="line"><span class="ruby">-p <span class="number">9091</span><span class="symbol">:</span><span class="number">9091</span> \</span></span><br><span class="line"><span class="ruby">-p <span class="number">51413</span><span class="symbol">:</span><span class="number">51413</span> \</span></span><br><span class="line"><span class="ruby">-e USERNAME=admin \</span></span><br><span class="line"><span class="ruby">-e PASSWORD=admin \</span></span><br><span class="line"><span class="ruby">jaymoulin/transmission</span></span><br></pre></td></tr></table></figure><h3 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h3><p>输入 IP:9091 即可进入 transmission 的管理界面<br>下载后的文件是保存在 <code>/home/tr/download</code> 这个路径下的</p><p>想要取回本地，可以和上一篇文章一样，安装 caddy ，或者也可以使用 FTP 的方法。</p><h3 id="取回本地"><a href="#取回本地" class="headerlink" title="取回本地"></a>取回本地</h3><p>但是下载好后文件是在服务器里，我想把它取回到电脑或者手机。那么，开启一个 http 服务即可。</p><p>这里安装一个 caddy<br><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">wget -<span class="keyword">N</span> --<span class="keyword">no</span>-check-certificate http<span class="variable">s:</span>//raw.githubusercontent.<span class="keyword">com</span>/ToyoDAdoubi/doubi/master/caddy_install.<span class="keyword">sh</span> &amp;&amp; chmod +<span class="keyword">x</span> caddy_install.<span class="keyword">sh</span> &amp;&amp; bash caddy_install.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure></p><p>写入配置<br><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="comment">":80 &#123;  </span></span><br><span class="line"> root /home/<span class="keyword">tr</span></span><br><span class="line"> timeouts none  </span><br><span class="line"> gzip  </span><br><span class="line"> <span class="keyword">browse</span>  </span><br><span class="line">&#125;<span class="comment">" &gt; /usr/local/caddy/Caddyfile</span></span><br></pre></td></tr></table></figure></p><p>启动 caddy<br><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/etc/i</span>nit.d<span class="regexp">/caddy start</span></span><br></pre></td></tr></table></figure></p><p>开放服务器 80 端口<br><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">ufw allow <span class="number">80</span></span><br></pre></td></tr></table></figure></p><p>完成后就可以在浏览器里，输入 <code>IP地址</code> 来访问下载好的文件了。如果是 MP4 文件的话，还可以支持在线播放。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍如何在服务器上安装 docker，并安装 transmission 来下载 BT 种子任务。并且取回本地。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>用服务器来离线下载 BT 种子，体验千兆网络的魅力——docker 安装 qBittorrent，以及把文件取回手机</title>
    <link href="https://powersee.GitHub.io/2019/08/docker-qb/"/>
    <id>https://powersee.GitHub.io/2019/08/docker-qb/</id>
    <published>2019-08-29T01:54:24.000Z</published>
    <updated>2019-10-21T09:56:51.037Z</updated>
    
    <content type="html"><![CDATA[<p><strong>此教程并不难，只要你会复制粘贴即可。</strong></p><a id="more"></a><blockquote><p>要想进行下面的操作，需要有一个服务器，如果你没有的话， <a href="https://www.vultr.com/?ref=8161953-4F" target="_blank" rel="noopener">点此链接注册充值 10 美元送 50 美元</a><br>送的 50美元只有一个月的有效期。（所以不要省，开贵点的机器吧）</p></blockquote><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><blockquote><p>使用这家的服务器，是因为它可以随时的删除，不像其它的，一买就得一年。而且，这家还可以选择自动安装 docker ，又节省了一些时间。</p></blockquote><ol><li>点击左边的 billing</li><li>充值方式支持 <strong>支付宝</strong> <strong>微信</strong>（但最少 10 美元）</li><li>充值好后 ，点右边那个 <strong>+</strong> 的圆圈</li><li>然后选择服务器的<strong>地区</strong>（日本和新加坡会比较快，不过有可能连接不上，选美国也可以）</li><li><strong>Server Type</strong>点 <strong>application</strong> ，里面就有 <strong>docker</strong></li><li><strong>Server Size</strong> 就是服务器的配置，越高就越贵。（如果有赠送的 50 美元，那就选那个 40 美元的吧，反正你不花，下个月也没了）</li><li>把下面的 <strong>Enable IPv6</strong> 前面的 框 打钩✅（可以使我们下载时连接到更多的用户）</li><li>然后点击右下角的 deploy now</li><li>等待几分钟……<br>10.就可以看到服务器部署好了，给了一个 ip 地址。</li></ol><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p> 我们要控制这台服务器，需要用 ssh 工具，这里我用 putty 来演示。</p><blockquote><p>如果用安卓手机的话，可以下载个 <strong>JuiceSSH</strong></p></blockquote><p>有能力的可以去 GitHub 下载：<a href="https://github.com/larryli/PuTTY/releases" target="_blank" rel="noopener">地址</a><br>无法在 GitHub 下载的，可以到我的网盘里下载：<a href="http://veger.ys168.com/" target="_blank" rel="noopener">地址（在『电脑软件』里）</a></p><p>下载后解压，打开 putty<br><img src="https://i.loli.net/2019/08/29/QwXt5dyAIofNHMW.png" alt="putty 连接.png"><br>填上 IP 地址连接</p><p>接着输入用户名和密码。（密码输入时不会显示的）</p><p>连接后输入<br><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">docker</span> pull linuxserver/qbittorrent</span><br></pre></td></tr></table></figure></p><p>完成后输入</p><figure class="highlight haml"><table><tr><td class="code"><pre><span class="line">docker create \</span><br><span class="line">  -<span class="ruby">-name=qbittorrent \</span></span><br><span class="line"><span class="ruby">  -e PUID=<span class="number">1000</span> \</span></span><br><span class="line"><span class="ruby">  -e PGID=<span class="number">1000</span> \</span></span><br><span class="line"><span class="ruby">  -e TZ=Aisa/Shanghai \</span></span><br><span class="line"><span class="ruby">  -e UMASK_SET=<span class="number">022</span> \</span></span><br><span class="line"><span class="ruby">  -e WEBUI_PORT=<span class="number">8080</span> \</span></span><br><span class="line"><span class="ruby">  -p <span class="number">8999</span><span class="symbol">:</span><span class="number">8999</span> \</span></span><br><span class="line"><span class="ruby">  -p <span class="number">8999</span><span class="symbol">:</span><span class="number">8999</span>/udp \</span></span><br><span class="line"><span class="ruby">  -p <span class="number">8080</span><span class="symbol">:</span><span class="number">8080</span> \</span></span><br><span class="line"><span class="ruby">  -v /path/to/appdata/<span class="symbol">config:</span>/config \</span></span><br><span class="line"><span class="ruby">  -v /path/to/<span class="symbol">downloads:</span>/downloads \</span></span><br><span class="line"><span class="ruby">  --restart <span class="keyword">unless</span>-stopped \</span></span><br><span class="line"><span class="ruby">  linuxserver/qbittorrent</span></span><br></pre></td></tr></table></figure><p>创建好后再启动<br><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">docker <span class="literal">start</span> qbittorrent</span><br></pre></td></tr></table></figure></p><p>完成后就可以在浏览器里，输入 <code>IP:8080</code> 来访问 qB 了。</p><h2 id="取回本地"><a href="#取回本地" class="headerlink" title="取回本地"></a>取回本地</h2><p>但是下载好后文件是在服务器里，我想把它取回到电脑或者手机。那么，开启一个 http 服务即可。</p><p>这里安装一个 caddy<br><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">wget -<span class="keyword">N</span> --<span class="keyword">no</span>-check-certificate http<span class="variable">s:</span>//raw.githubusercontent.<span class="keyword">com</span>/ToyoDAdoubi/doubi/master/caddy_install.<span class="keyword">sh</span> &amp;&amp; chmod +<span class="keyword">x</span> caddy_install.<span class="keyword">sh</span> &amp;&amp; bash caddy_install.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure></p><p>写入配置<br><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="comment">":80 &#123;  </span></span><br><span class="line"> root /path/<span class="keyword">to</span>/downloads</span><br><span class="line"> timeouts none  </span><br><span class="line"> gzip  </span><br><span class="line"> <span class="keyword">browse</span>  </span><br><span class="line">&#125;<span class="comment">" &gt; /usr/local/caddy/Caddyfile</span></span><br></pre></td></tr></table></figure></p><p>启动 caddy<br><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/etc/i</span>nit.d<span class="regexp">/caddy start</span></span><br></pre></td></tr></table></figure></p><p>开放服务器 80 端口<br><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">ufw allow <span class="number">80</span></span><br></pre></td></tr></table></figure></p><p>完成后就可以在浏览器里，输入 <code>IP地址</code> 来访问下载好的文件了。如果是 MP4 文件的话，还可以支持在线播放。</p><h3 id="补充："><a href="#补充：" class="headerlink" title="补充："></a>补充：</h3><p>看到有些人评论说用服务器下载会有风险，这个我也是知道的。因为国外的版权保护比较严格，所以有时会监控到你在下载 BT ，如果发现你下载的内容是盗版视频之类的，有可能会对你发出警告⚠️！</p><p>但是，我说过我已经用了一年了，没有碰到过，所以才敢出这个教程。我认为可能和上传有关吧，不用上传太多应该就不太容易被查水表吧。所以我的分享率就设置为 2 而已。</p><blockquote><p>就算你真的被警告了，一般也就是叫你把视频删了而已。如果再严重点，我大不了就把这台服务器删了，然后重新开一台。（就跟我们在网吧里一样，这也是用 vultr 的好处。）</p></blockquote><p>而且，有的人问这个流量的问题，想视频中演示的，最便宜的套餐都有 1000G 流量，而且是上传 1000G，下载也 1000G ，一般使用根本是用不完的，只要设置一下这个分享率，一般是不会用超过的。</p><p><img src="https://i.loli.net/2019/08/30/tVnbi6zFp8SIED4.png" alt="bandi.png"><br>像我这一个月才用 200G ……</p><p>暂时这些……</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;此教程并不难，只要你会复制粘贴即可。&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>推送到 kindle</title>
    <link href="https://powersee.GitHub.io/2019/04/push-to-kindle/"/>
    <id>https://powersee.GitHub.io/2019/04/push-to-kindle/</id>
    <published>2019-04-28T14:23:56.000Z</published>
    <updated>2019-10-21T09:56:51.039Z</updated>
    
    <content type="html"><![CDATA[<p>分别讲三种方法</p><a id="more"></a><h2 id="手机端"><a href="#手机端" class="headerlink" title="手机端"></a>手机端</h2><p>关注微信公众号：cn_Kindle<br>绑定自己的亚马逊账号，即可把微信文章或者其它文章网址发送到这个号，即可把内容推送到 kindle 。</p><h2 id="电脑端"><a href="#电脑端" class="headerlink" title="电脑端"></a>电脑端</h2><p>微信电脑版就不讲了。<br><a href="https://fivefilters.org/kindle-it/" target="_blank" rel="noopener">https://fivefilters.org/kindle-it/</a><br>到这个网址将文章地址粘贴，然后点 preview ，出现预览界面，将其显示的邮箱（例如：<a href="mailto:kindle@fivefilters.org" target="_blank" rel="noopener">kindle@fivefilters.org</a>）添加到</p><blockquote><p>已认可的发件人电子邮箱列表</p></blockquote><p>然后填入自己的 kindle 邮箱点 send 。</p><h2 id="多个网页一起推送"><a href="#多个网页一起推送" class="headerlink" title="多个网页一起推送"></a>多个网页一起推送</h2><p>上面的推送都是一次一篇文章的，如果想把多篇文章一起推送到 kindle 可以用这种方法。</p><h3 id="浏览器插件-EpubPress"><a href="#浏览器插件-EpubPress" class="headerlink" title="浏览器插件 EpubPress"></a>浏览器插件 EpubPress</h3><p>这个插件 Chrome 和 Firefox 都有，安装后同时打开多篇文章，再点击这个插件，就可以把这些文章做成 mobi 格式的电子书，可以本地下载，也可以绑定 kindle 邮箱，直接发送到 kindle。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;分别讲三种方法&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Nginx下修改WordPress固定链接导致无法访问</title>
    <link href="https://powersee.GitHub.io/2019/03/Nginx-WordPress-link-error/"/>
    <id>https://powersee.GitHub.io/2019/03/Nginx-WordPress-link-error/</id>
    <published>2019-03-12T01:08:51.000Z</published>
    <updated>2019-10-21T09:56:51.034Z</updated>
    
    <content type="html"><![CDATA[<p>内容来自：<a href="https://blog.csdn.net/csdn1161851523/article/details/52942404" target="_blank" rel="noopener">CSDN</a></p><a id="more"></a><p>先找到配置文件的位置，如我这里是<br><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">/usr/<span class="keyword">local</span>/nginx/<span class="keyword">conf</span>/nginx.<span class="keyword">conf</span></span><br></pre></td></tr></table></figure></p><p>用 vim 来修改，在server{}  字段   中的  “root /websit/wwwroot/;”(这行就是指定网站所在目录的)  这一行的下面 ，添加下面的内容：<br><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">if</span> (-f <span class="variable">$request_filename</span>/index.html)&#123;</span><br><span class="line"><span class="attribute">rewrite</span> (.*) <span class="variable">$1</span>/index.html <span class="literal">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="attribute">if</span> (-f <span class="variable">$request_filename</span>/index.php)&#123;</span><br><span class="line"><span class="attribute">rewrite</span> (.*) <span class="variable">$1</span>/index.php;</span><br><span class="line">&#125;</span><br><span class="line"><span class="attribute">if</span> (!-f <span class="variable">$request_filename</span>)&#123;</span><br><span class="line"><span class="attribute">rewrite</span> (.*) /index.php;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">rewrite</span> /wp-admin$ <span class="variable">$scheme</span>://<span class="variable">$host</span><span class="variable">$uri</span>/ <span class="literal">permanent</span>;</span><br></pre></td></tr></table></figure></p><p>然后重启 Nginx ，如果和我一样是用 lnmp 的，可以输入<br><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">lnmp nginx restart</span></span><br></pre></td></tr></table></figure></p><p>之后就可以访问了文章了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;内容来自：&lt;a href=&quot;https://blog.csdn.net/csdn1161851523/article/details/52942404&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;CSDN&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="wordpress" scheme="https://powersee.GitHub.io/tags/wordpress/"/>
    
  </entry>
  
  <entry>
    <title>禁止 mac 在U盘产生隐藏文件</title>
    <link href="https://powersee.GitHub.io/2018/10/mac-hide-file/"/>
    <id>https://powersee.GitHub.io/2018/10/mac-hide-file/</id>
    <published>2018-10-08T14:51:23.000Z</published>
    <updated>2019-10-21T09:56:51.038Z</updated>
    
    <content type="html"><![CDATA[<p>自从 U 盘在 mac 上使用一段时间后，我发现里面有好多隐藏文件。<br><a id="more"></a><br>每个都是 4KB。基本上 U 盘里每个文件，都有一个跟它对应的隐藏文件。看来是 Mac 自动生成的，但不知道是用来干什么的，而且平时也没什么影响，毕竟隐藏文件不管在 win 还是 Mac，默认情况下都是不显示的，所以也就没去管它。</p><p>直到，那天 U 盘插别人的电脑，居然被安全软件检测到这些隐藏文件，弹窗说有安全隐患……</p><p>再接着，拿 U 盘去自助打印机，这一堆隐藏文件显示在那里，严重影响我查找要打印的文件的效率。这不能忍。</p><p>于是我百度一下，没有找到方法。再谷歌，就找到了。</p><p>是 Mac 上【聚焦搜索】（spotlight）这个软件造成的，这是一个全局搜索软件。应该是它为了能快速搜索到 U 盘里的文件，所以，当我们在 mac 上往 U 盘传文件的时候，同时会在文件旁边创建一个 4KB 的隐藏文件。</p><h2 id="关闭方法"><a href="#关闭方法" class="headerlink" title="关闭方法"></a>关闭方法</h2><p>打开【系统偏好设置】，第一行倒数第二个的【聚焦】，进去后点【隐私】，然后左下角的【+】，之后选中 U 盘，确认就好了。以后再往 U 盘写入文件就不会有这些隐藏文件了，之前产生的那些可以在 win 下将之删除。（Mac 下在访达里根本无法显示这些文件）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自从 U 盘在 mac 上使用一段时间后，我发现里面有好多隐藏文件。&lt;br&gt;
    
    </summary>
    
    
      <category term="mac" scheme="https://powersee.GitHub.io/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>解决 ireader 阅读器无法连接电脑问题</title>
    <link href="https://powersee.GitHub.io/2018/10/Solve-the-problem-that-the-ireader-cannot-connect-to-the-computer/"/>
    <id>https://powersee.GitHub.io/2018/10/Solve-the-problem-that-the-ireader-cannot-connect-to-the-computer/</id>
    <published>2018-10-02T14:59:34.000Z</published>
    <updated>2019-10-21T09:56:51.034Z</updated>
    
    <content type="html"><![CDATA[<p>今晚把阅读器用 USB 连接电脑，想传些文件。发现连接后，资源管理器无法读到盘符。</p><a id="more"></a><p>由于平时我主要用 Mac 系统，无法用 usb 线与阅读器互传文件的，因此都是用 WIFI 传输。不过之前曾经在虚拟机里运行 XP 系统，可以与阅读器连接并且传输文件，因此硬件是没问题的。</p><p>现在 win10 状态下却无法连接，折腾一番后，没法，联系客服。在掌阅的微信公众号【掌阅iReader】里面，右下角，服务，人工服务。</p><p>一大段话确认我硬件和操作没有问题后，回复我：</p><blockquote><p>若是您的电脑没有识别：请您这边电子书阅读器插上USB连接电脑后右击–我的电脑–属性–点击打开设备管理器截图提供这边帮您查看一下</p></blockquote><p>当阅读器插入后这里面会多出一个设备【Android Phone】，展开它，里面是【Android ADB Interface】。右键，更新驱动。</p><p><strong>重点来了</strong></p><p>不要点【自动搜索……】，而是点下面的【浏览我的计算机以查找驱动程序软件】。</p><p>然后这时会有两个选项，选择下面那个带有【MTP】的，安装这个，然后就完了。资源管理器里可以识别到了。</p><p><img src="https://i.loli.net/2018/10/02/5bb388899cc2d.jpg" alt="IMG_20181002_202702.jpg"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今晚把阅读器用 USB 连接电脑，想传些文件。发现连接后，资源管理器无法读到盘符。&lt;/p&gt;
    
    </summary>
    
    
      <category term="设备" scheme="https://powersee.GitHub.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
  </entry>
  
  <entry>
    <title>hexo 换电脑方案</title>
    <link href="https://powersee.GitHub.io/2018/09/hexo-change-computer/"/>
    <id>https://powersee.GitHub.io/2018/09/hexo-change-computer/</id>
    <published>2018-09-09T02:11:51.000Z</published>
    <updated>2019-10-21T09:56:51.037Z</updated>
    
    <content type="html"><![CDATA[<p>hexo 搭建博客容易。但是搭建好后只能在这一台电脑上用，这就有点麻烦了。而且要是电脑坏了那且不是完了？所以备份以及恢复很重要。</p><a id="more"></a><p>（当然，windows 下能下载个便携版的 hexo 环境，(<a href="https://portablehexo.bitmoe.cn/" target="_blank" rel="noopener">https://portablehexo.bitmoe.cn/</a>) ，放在 U 盘里面，这样随便到哪里都可以用。这种这里不讨论。）</p><h2 id="备份哪"><a href="#备份哪" class="headerlink" title="备份哪"></a>备份哪</h2><p>用 hexo 搭建博客好后，生成的静态网页是放在（public）这个文件夹里的。正常流程就是把这个文件夹里的内容发布到 github 或者自己的服务器上。而我们要备份的，不是这个，而是整个博客源码，就是（public）的上一层的这整个文件夹。</p><h2 id="如何备份"><a href="#如何备份" class="headerlink" title="如何备份"></a>如何备份</h2><p>那么可以手动复制吗？额，有点难。因为小文件太多，接近一万个，复制要很久。而且文件经常变动，每次变动都再重新复制一份？不现实。</p><p>因此用 <strong>git</strong> 用管理是最好的方法。在博客项目根目录，比如我的博客源码放在 blog 这个文件夹里，那么就用命令行进入这个文件夹，git init 初始化这个项目，将它变成一个仓库，然后就可以把备份到网上了。</p><h2 id="准备新环境"><a href="#准备新环境" class="headerlink" title="准备新环境"></a>准备新环境</h2><p>比如说电脑坏了，或者换了新电脑。要怎么在新的新电脑上继续写博客呢？</p><p>首先得先在新的电脑上安装好运行 hexo 的环境，比如 windows 就得先安装 node.js 和 git，然后再安装 hexo。等可以运行 hexo 并在浏览器显示了，再把刚才备份到网上的博客源码克隆下来。</p><h2 id="克隆之后"><a href="#克隆之后" class="headerlink" title="克隆之后"></a>克隆之后</h2><p>如果顺利的话，此时进入克隆下来的文件夹，再 npm install 一下，应该就可以用了。如果像我这样，发现可以启动，但是打开链接后什么都没显示。那么应该是主题缺失的原因。可以选择重新下载主题，或者在备份的时候把主题也备份到网络。可以参考这篇文章：<a href="https://powersee.github.io/2018/08/about-git-cache/">修复 next 主题无法提交到 git 仓库</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;hexo 搭建博客容易。但是搭建好后只能在这一台电脑上用，这就有点麻烦了。而且要是电脑坏了那且不是完了？所以备份以及恢复很重要。&lt;/p&gt;
    
    </summary>
    
    
      <category term="网络" scheme="https://powersee.GitHub.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>文章中插入服务器的视频</title>
    <link href="https://powersee.GitHub.io/2018/09/add-video-in-post/"/>
    <id>https://powersee.GitHub.io/2018/09/add-video-in-post/</id>
    <published>2018-09-02T08:51:06.000Z</published>
    <updated>2019-10-21T09:56:51.035Z</updated>
    
    <content type="html"><![CDATA[<p>在博客上可以用嵌入的方式，引用优酷和 YouTube 的视频，那么可以播放放在网站（服务器）的视频吗？<br><a id="more"></a></p><p>下面依然用这串代码<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">height</span>=<span class="string">315</span> <span class="attr">width</span>=<span class="string">560</span> <span class="attr">src</span>=<span class="string">'视频的相对路径'</span> <span class="attr">frameborder</span>=<span class="string">0</span> <span class="attr">allowfullscreen</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>在本地的启动 web 服务，然后在浏览器打开，视频可以播放。不错，手机端也可以正常访问。此时将网页和视频文件放置在 GitHub 上，同样可以播放。但是有个缺点，一打开就自动播放，不知道怎么关闭。</p><p>后来了解到用 video 标签的话，就可以设置它不自动播放，并且如果想让视频能够自动适应大小，只需要加上 div 标签就行。如下面这样<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>  <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">height</span>=<span class="string">"100%"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">src</span>=<span class="string">"视频路径"</span> <span class="attr">controls</span>=<span class="string">"controls"</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><div width="100%"><br><video height="100%" width="100%" src="/misc/1.mp4" controls="controls"></video><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在博客上可以用嵌入的方式，引用优酷和 YouTube 的视频，那么可以播放放在网站（服务器）的视频吗？&lt;br&gt;
    
    </summary>
    
    
      <category term="网络" scheme="https://powersee.GitHub.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>ireader阅读器与掌阅APP对比</title>
    <link href="https://powersee.GitHub.io/2018/08/ireader-vs-APP/"/>
    <id>https://powersee.GitHub.io/2018/08/ireader-vs-APP/</id>
    <published>2018-08-26T15:22:53.000Z</published>
    <updated>2019-10-21T09:56:51.038Z</updated>
    
    <content type="html"><![CDATA[<p>近日买了个 ireader light 青春版。是一款类似 kindle 的电子阅读器，不过性价比高，功能体验也比较好。所以综合了解后我选择了它。<br><a id="more"></a><br>因为是掌阅出的，那么功能就和在手机下载个 掌阅APP 差不多。主要还是看中它的墨水屏，据说墨水屏看久不易伤眼睛。其它的也是有些不同的。</p><h2 id="阅读器独有的"><a href="#阅读器独有的" class="headerlink" title="阅读器独有的"></a>阅读器独有的</h2><ul><li><p>阅读器书城的图书价格和掌阅APP价格，总体价格保持一致。阅读器书城为回馈书友，每周会有特价书目，仅限阅读器书友享有。</p></li><li><p>无广告。这点其实不怎么值得提，因为手机有些定制版的也是无广告的。比如 OPPO vivo 这两个牌子的手机，自带的定制版的掌阅好像就是无广告的。而阅读器其实也就是一个定制版的掌阅APP，装在一个墨水屏平板里面罢了。况且我花了几百块买了这个只能阅读的机器，倘若得和手机免费下载一个APP一样，忍受着广告，这说得过去吗？</p></li><li><p>传送资料。这个功能说是主打微信文章推送，就是可以把公众号文章，弄到阅读器里面来阅读。流程是先关注它的公众号，绑定手机，然后再来阅读器用手机号登录。之后看到文章，复制它的链接，发送给公众号，阅读器就能收到这条链接。可见只是把文章网址发过去罢了，因此其它链接应该也是可以的。我试了一些博客文章，有英文的和中文的，发现有时候图片会加载不出来，全英文排版也还可以，故没图片或者图片少的文章，推送到阅读器里面再来观看，体验还是不错的。然后知乎的回答也可以推送到此。这个功能体验几次后我还是挺喜欢的。</p></li><li><p>阅读时长奖励代金券。这个并非手机端同有的 『阅读30分钟奖励5代金券』，而是阅读器里『我的，福利，时长福利』，（手机端我找不到这个，所以应该是阅读器特权吧）。这个一个星期算一次，阅读不同时间领取不同代金券，888分钟为最高，达到的话，全部领取有几百代金券。</p></li></ul><h2 id="手机独有的（或者说阅读器还没有的）"><a href="#手机独有的（或者说阅读器还没有的）" class="headerlink" title="手机独有的（或者说阅读器还没有的）"></a>手机独有的（或者说阅读器还没有的）</h2><ul><li><p>读完写评论。手机端看完一本书，可以给它评星级和写评论，而阅读器看完了就只出现：全书完。因此在阅读器看完，我得回到手机，翻到最后一页，再点一下，出现写书评的界面再来写。不写过段时间都不知道这本书有没有看完……</p></li><li><p>杂志往期。手机端打开一本杂志，右上角有个『往期』，这个非常方便，看完就能继续下载下一本。阅读器应该只能去书城里面搜索吧。</p></li></ul><p>阅读器的系统是可以升级的，所以我觉得未来应该会有越来越多的功能加进来。不过现在有些功能只有手机有，阅读器没有，有些不太方便。其它的暂时对我好像没多大影响。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;近日买了个 ireader light 青春版。是一款类似 kindle 的电子阅读器，不过性价比高，功能体验也比较好。所以综合了解后我选择了它。&lt;br&gt;
    
    </summary>
    
    
      <category term="设备" scheme="https://powersee.GitHub.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
  </entry>
  
  <entry>
    <title>jekyll 与 hexo 的对比</title>
    <link href="https://powersee.GitHub.io/2018/08/jekyll-vs-hexo/"/>
    <id>https://powersee.GitHub.io/2018/08/jekyll-vs-hexo/</id>
    <published>2018-08-17T10:02:07.000Z</published>
    <updated>2019-10-21T09:56:51.038Z</updated>
    
    <content type="html"><![CDATA[<p>jekyll 和 hexo 的差别呢，就是 jekyll 可以直接在 GitHub 上面写文章，而 hexo 则需要在电脑里面写好再上传上来。<br><a id="more"></a><br>前面平台搭建的部分可以说是差不多的，搭建好同样传到 GitHub 上，jekyll 是把博客源码传上来，而 hexo 则是先在电脑里生成 html 的静态文件，再将这些传上来。</p><p>也因为这样，hexo 的备份会比较麻烦一点。而 jekyll 则可以说本来就自带备份（针对于像我这种使用 git pages 的人来说）。因为 jekyll 本身就是把整个博客都上传的。</p><p>不仅备份方便，编辑修改也方便，因为文件都在 GitHub 上，可以直接用浏览器登录 GitHub ，直接更改文章源文件就能修改博客文章，在上面新增 Markdown 文件就能往博客添加新文章。</p><p>但是呢，jekyll 不能像 hexo 一样使用命令行 <code>hexo new &#39;title&#39;</code> 来生成文章模板。因此用这个来写文章的话，就得自己打文章开头的那些设置，如这些</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">jekyll</span> <span class="string">与</span> <span class="string">hexo</span> <span class="string">的对比</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018</span><span class="bullet">-08</span><span class="bullet">-05</span> <span class="number">21</span><span class="string">:02:07</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>因此这个感觉也算是劣势吧。当然复制粘贴上一篇文章的，然后修改一下也不会用太久的时间。但还是能自动生成方便啊。</p><p>因此在这上面写好像也没见得有多爽……</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;jekyll 和 hexo 的差别呢，就是 jekyll 可以直接在 GitHub 上面写文章，而 hexo 则需要在电脑里面写好再上传上来。&lt;br&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="https://powersee.GitHub.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="网络" scheme="https://powersee.GitHub.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>电脑拔网线一天体验</title>
    <link href="https://powersee.GitHub.io/2018/08/one-day-computer-no-network/"/>
    <id>https://powersee.GitHub.io/2018/08/one-day-computer-no-network/</id>
    <published>2018-08-14T16:05:59.000Z</published>
    <updated>2019-10-21T09:56:51.038Z</updated>
    
    <content type="html"><![CDATA[<p>13 号晚上的 23:30 左右，我拔掉了路由器 wan 口的网线，这样我电脑和手机都无法通过它来上网了。到现在已经 24 个小时了。</p><a id="more"></a><h2 id="初衷"><a href="#初衷" class="headerlink" title="初衷"></a>初衷</h2><p>本来想试试断网一天是什么体验的，因为我经常意识到，无缘无故一天就过去了，我好像什么都没干啊，好像浪费很多时间在网上闲逛。虽有时意识到会自制下，但效果不太明显。</p><p>但我有自知之明，不可能完全断网的，太难做到了。于是，我还可以用手机开数据上网。</p><h2 id="那么这-24-小时左右，我干了什么呢？"><a href="#那么这-24-小时左右，我干了什么呢？" class="headerlink" title="那么这 24 小时左右，我干了什么呢？"></a>那么这 24 小时左右，我干了什么呢？</h2><ul><li>看了几集《老友记》，其实下载挺久的了，有时就看一两集这样，其实这一天好像就看了三集吧。虽然电脑里也有下载好的电影，不过没去看。</li><li>练练 Python，这个最近又接着开始学了，还是一头雾水。毕竟从图书馆借的这本书也不厚，还是坚持看并跟着练吧。</li><li>看 Rick West 的文章，其实我也不认识他，看别的博主说他是大神，并且推荐他的文章，于是就去看看，应该是英国人，一个 web developer。因为文章都是英文的，我把他一共接近 10 篇文章看完了，也就消去了不少的时间。</li><li>然后呢，也看阮一峰老师的博客，挺厉害的，从 2003 年写博客到现在，看他的文章还是有挺多东西学的。</li><li>接着就是日常的 知乎 和 v2ex 咯。</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>其实最终还是大部分时间都是在网上，只是从电脑转移到手机罢了。不过也是因为是在手机，能干的事并不多，所以才能看这么多的文章。要是在电脑上肯定不行，因为它能做的事太多了，容易在这事时张那事，导致能集中精力做一件事，因此效率也很低。</p><p>总之，还是一次挺不错的体验的。下次试试能不能完全断网体验一下。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;13 号晚上的 23:30 左右，我拔掉了路由器 wan 口的网线，这样我电脑和手机都无法通过它来上网了。到现在已经 24 个小时了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="https://powersee.GitHub.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>修复 next 主题无法提交到 git 仓库</title>
    <link href="https://powersee.GitHub.io/2018/08/about-git-cache/"/>
    <id>https://powersee.GitHub.io/2018/08/about-git-cache/</id>
    <published>2018-08-14T15:55:09.000Z</published>
    <updated>2019-10-21T09:56:51.035Z</updated>
    
    <content type="html"><![CDATA[<p>修复 git 仓库内，有另一个仓库，而产生冲突的问题。</p><a id="more"></a><p>用 hexo 来部署博客，只是把生成的静态网页给发布上去。但完整的备份是需要备份博客源码的，很多人会新建一个项目来放置博客源码。这样每次写好文章更新博客后，再把源码更新到远程仓库，例如 github 就行。完美备份。</p><p>但是，我发现我的 Next 主题下的文件全部无法上传，官方自带的主题就行。于是想到，当前这整个博客文件夹都是一个 git 仓库，而 next 主题是从 github 上克隆下来的，也是一个仓库，估计是会产生冲突。</p><p>于是，进入到 next 目录下，用命令行<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">rm</span> <span class="selector-tag">-rf</span> <span class="selector-class">.git</span></span><br></pre></td></tr></table></figure></p><p>删除掉 <code>.git</code> 这个文件夹。这样应该就把这个仓库变成一个普通的文件夹了吧。于是再来把它添加到博客源码这个项目里吧<br><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">git <span class="keyword">add</span><span class="bash"> .</span></span><br></pre></td></tr></table></figure></p><p>结果不行，报错了，显示：<br><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="string">fatal:</span> <span class="keyword">in</span> unpopulated subnodule <span class="string">'themes/next'</span></span><br></pre></td></tr></table></figure></p><p>看来不只是删除一个文件夹就行。好像还得再清除下，先返回上一级目录，<code>cd ..</code> 后就是在 themes 这个目录下咯，再执行<br><figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line">git rm -r –cached /<span class="keyword">next</span></span><br></pre></td></tr></table></figure></p><p>去掉已经托管的文件，然后提交即可。</p><p>此时再输入<br><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">git <span class="keyword">add</span><span class="bash"> .</span></span><br></pre></td></tr></table></figure></p><p>就可以了。<br>之后再 commit，并成功同步到远程仓库。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;修复 git 仓库内，有另一个仓库，而产生冲突的问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="网络" scheme="https://powersee.GitHub.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>光之子 去年录制游戏全程</title>
    <link href="https://powersee.GitHub.io/2018/08/child-of-light/"/>
    <id>https://powersee.GitHub.io/2018/08/child-of-light/</id>
    <published>2018-08-05T07:05:43.000Z</published>
    <updated>2019-10-21T09:56:51.036Z</updated>
    
    <content type="html"><![CDATA[<p>这个游戏是去年这个时候录的，是我第一个全程录完的游戏。当时是在 PSV 上先玩一段，再到 PS4 上重玩这一段并录制下来的。<br><a id="more"></a></p><p>下面的视频是用这样的代码的。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">height</span>=<span class="string">315</span> <span class="attr">width</span>=<span class="string">560</span> <span class="attr">src</span>=<span class="string">'https://player.youku.com/embed/视频的ID在这里替换=='</span> <span class="attr">frameborder</span>=<span class="string">0</span> <span class="attr">allowfullscreen</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="01"><a href="#01" class="headerlink" title="01"></a>01</h3><iframe height="315" width="560" src="https://player.youku.com/embed/XMjk4MjgyMDk3Mg==" frameborder="0" allowfullscreen></iframe><h3 id="02"><a href="#02" class="headerlink" title="02"></a>02</h3><iframe height="315" width="560" src="https://player.youku.com/embed/XMjk4Mjg1MDM4NA==" frameborder="0" allowfullscreen></iframe><h3 id="03"><a href="#03" class="headerlink" title="03"></a>03</h3><iframe height="315" width="560" src="https://player.youku.com/embed/XMjk4NjMxOTc4NA==" frameborder="0" allowfullscreen></iframe><h3 id="04"><a href="#04" class="headerlink" title="04"></a>04</h3><iframe height="315" width="560" src="https://player.youku.com/embed/XMjk4NjQ1NTAwNA==" frameborder="0" allowfullscreen></iframe><h3 id="05"><a href="#05" class="headerlink" title="05"></a>05</h3><iframe height="315" width="560" src="https://player.youku.com/embed/XMjk4Nzk4NjU3Mg==" frameborder="0" allowfullscreen></iframe><h3 id="06"><a href="#06" class="headerlink" title="06"></a>06</h3><iframe height="315" width="560" src="https://player.youku.com/embed/XMjk4OTI5MzY3Ng==" frameborder="0" allowfullscreen></iframe><h3 id="07"><a href="#07" class="headerlink" title="07"></a>07</h3><iframe height="315" width="560" src="https://player.youku.com/embed/XMjk4OTU4NDgxMg==" frameborder="0" allowfullscreen></iframe><h3 id="08"><a href="#08" class="headerlink" title="08"></a>08</h3><iframe height="315" width="560" src="https://player.youku.com/embed/XMjk5Mjc4ODgyOA==" frameborder="0" allowfullscreen></iframe><h3 id="09"><a href="#09" class="headerlink" title="09"></a>09</h3><iframe height="315" width="560" src="https://player.youku.com/embed/XMjk5NDgwMjQzMg==" frameborder="0" allowfullscreen></iframe><h3 id="10"><a href="#10" class="headerlink" title="10"></a>10</h3><iframe height="315" width="560" src="https://player.youku.com/embed/XMjk5ODgyMTMxMg==" frameborder="0" allowfullscreen></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这个游戏是去年这个时候录的，是我第一个全程录完的游戏。当时是在 PSV 上先玩一段，再到 PS4 上重玩这一段并录制下来的。&lt;br&gt;
    
    </summary>
    
    
      <category term="游戏" scheme="https://powersee.GitHub.io/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>VPS离线下载文件最简易方案</title>
    <link href="https://powersee.GitHub.io/2018/08/offline-download/"/>
    <id>https://powersee.GitHub.io/2018/08/offline-download/</id>
    <published>2018-08-03T21:48:34.000Z</published>
    <updated>2019-10-21T09:56:51.038Z</updated>
    
    <content type="html"><![CDATA[<h3 id="所使用的工具："><a href="#所使用的工具：" class="headerlink" title="所使用的工具："></a>所使用的工具：</h3><ul><li>Aria2</li><li>caddy</li><li>AriaNg<a id="more"></a></li></ul><p>脚本来自<strong>逗比根据地</strong></p><h3 id="首先安装-下载工具–-Aria2"><a href="#首先安装-下载工具–-Aria2" class="headerlink" title="首先安装 下载工具– Aria2"></a>首先安装 下载工具– Aria2</h3><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">wget -<span class="keyword">N</span> --<span class="keyword">no</span>-check-certificate http<span class="variable">s:</span>//raw.githubusercontent.<span class="keyword">com</span>/ToyoDAdoubi/doubi/master/aria2.<span class="keyword">sh</span> &amp;&amp; chmod +<span class="keyword">x</span> aria2.<span class="keyword">sh</span> &amp;&amp; bash aria2.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure><p>按 1 ，就可以安装。成功后会看到这样的显示。<br><img src="/img/2018/Aria2-done.png" alt="image"></p><p>由于我们用 ssh 登录 vps 后，默认是在 root 目录下。因此我想让下载位置也在这之下，方便以后用命令行删除文件。</p><p>因此需先创建文件夹</p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">mkdir -<span class="selector-tag">p</span> web/down</span><br></pre></td></tr></table></figure><p>然后进入 Aria2 来需改下载位置和密码</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="string">./aria2.sh</span></span><br></pre></td></tr></table></figure><p>选择 7. 修改 配置文件</p><p>再选择 4.  修改 Aria2 密码+端口+文件下载位置</p><p>密码就个人按喜好改了(后面要用到)，端口就不改了，按回车键使用默认即可，下载位置就改为新的路径</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/root/</span>web<span class="regexp">/down</span></span><br></pre></td></tr></table></figure><p>再次看到 ==Aria2 启动成功 !  == 这部分就完成了。</p><hr><h3 id="安装使用界面"><a href="#安装使用界面" class="headerlink" title="安装使用界面"></a>安装使用界面</h3><p>下载工具安装完成了，那要怎么用它呢？难道用命令行来下载文件？虽然确实可以，不过这有点……</p><p>还是图形界面比较任性化，点点几下就行。</p><h4 id="安装-web-服务器-caddy"><a href="#安装-web-服务器-caddy" class="headerlink" title="安装 web 服务器 caddy"></a>安装 web 服务器 caddy</h4><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">wget -<span class="keyword">N</span> --<span class="keyword">no</span>-check-certificate http<span class="variable">s:</span>//raw.githubusercontent.<span class="keyword">com</span>/ToyoDAdoubi/doubi/master/caddy_install.<span class="keyword">sh</span> &amp;&amp; chmod +<span class="keyword">x</span> caddy_install.<span class="keyword">sh</span> &amp;&amp; bash caddy_install.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure><h4 id="写入配置到-Caddy-配置文件"><a href="#写入配置到-Caddy-配置文件" class="headerlink" title="写入配置到 Caddy 配置文件"></a>写入配置到 Caddy 配置文件</h4><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="comment">":80 &#123;</span></span><br><span class="line"> root /root/web</span><br><span class="line"> timeouts none</span><br><span class="line"> gzip</span><br><span class="line"> <span class="keyword">browse</span></span><br><span class="line">&#125;<span class="comment">" &gt; /usr/local/caddy/Caddyfile</span></span><br></pre></td></tr></table></figure><h4 id="下载-AriaNg"><a href="#下载-AriaNg" class="headerlink" title="下载 AriaNg"></a>下载 AriaNg</h4><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">cd web &amp;&amp; wget https:<span class="regexp">//gi</span>thub.com<span class="regexp">/mayswind/</span>AriaNg<span class="regexp">/releases/</span>download<span class="regexp">/0.4.0/</span>aria-ng-<span class="number">0.4</span>.<span class="number">0</span>.zip &amp;&amp; unzip aria-ng-<span class="number">0.4</span>.<span class="number">0</span>.zip</span><br></pre></td></tr></table></figure><p>这里出错的话，可能是因为没有安装 unzip 这个应用，根据提示安装下即可。</p><h4 id="启动-caddy"><a href="#启动-caddy" class="headerlink" title="启动 caddy"></a>启动 caddy</h4><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/etc/i</span>nit.d<span class="regexp">/caddy start</span></span><br></pre></td></tr></table></figure><hr><h3 id="下载文件并取回本地"><a href="#下载文件并取回本地" class="headerlink" title="下载文件并取回本地"></a>下载文件并取回本地</h3><p>这时候就可以用浏览器，通过 IP 或者域名来访问下载界面。需要设置一下。<br><img src="/img/2018/AriaNg.png" alt="image"></p><p>第一个红圈可以填 IP 和域名，都行的。第二个红圈就是填刚才设置的密码了。</p><p>连接上会有左下角有绿色的已连接提醒。然后就可以下载文件了，也可以下载种子。</p><p>下载完就在我们的 vps 里面，那要怎么取回本地呢？只需要在浏览器地址栏里，在  IP 或者域名后面加上 /down 就行。例如</p><blockquote><p>115.152.148.55/down</p></blockquote><p>就会显示下载的那些文件。</p><hr><p>这个方法呢，是我个人觉得比较简易的，比较适合我自己的。下载完就在命令行里用</p><blockquote><p>rm -rf web/down/*</p></blockquote><p>来删除所有的文件。</p><p>因此也就不去搞那些需要 PHP 的了。也因为下载完就删除，所以也没必要设置需要密码才能访问文件列表。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;所使用的工具：&quot;&gt;&lt;a href=&quot;#所使用的工具：&quot; class=&quot;headerlink&quot; title=&quot;所使用的工具：&quot;&gt;&lt;/a&gt;所使用的工具：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Aria2&lt;/li&gt;
&lt;li&gt;caddy&lt;/li&gt;
&lt;li&gt;AriaNg
    
    </summary>
    
      <category term="服务器" scheme="https://powersee.GitHub.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="服务器" scheme="https://powersee.GitHub.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>PSV存档管理器 savemgr 使用经验</title>
    <link href="https://powersee.GitHub.io/2018/08/savemgr/"/>
    <id>https://powersee.GitHub.io/2018/08/savemgr/</id>
    <published>2018-08-02T03:02:59.000Z</published>
    <updated>2019-10-21T09:56:51.039Z</updated>
    
    <content type="html"><![CDATA[<p>savemgr，存档管理器，在 Github 上项目名称为：vita-savemgr<br><a id="more"></a><br>项目地址：<a href="https://github.com/d3m3vilurr/vita-savemgr" target="_blank" rel="noopener">https://github.com/d3m3vilurr/vita-savemgr</a></p><p>作用：备份还原存档，分享存档给别人，使用他人存档。</p><p>使用方法：（#本文只讲v2.0正式版）那么首先下载这个安装包，之后在PSV上面打开安装。</p><blockquote><p><a href="https://github.com/d3m3vilurr/vita-savemgr/releases/download/2.0.0/savemgr.vpk" target="_blank" rel="noopener">https://github.com/d3m3vilurr/vita-savemgr/releases/download/2.0.0/savemgr.vpk</a></p></blockquote><p>完成之后PSV桌面就有这个图标了。打开，选择一个游戏，然后出现四个选项。分别是 备份，恢复，删除，格式化。看字面意思很容易懂其作用。</p><p><img src="/img/2018/savemgr.jpg" alt="软件截图"></p><p>比如我要备份空之轨迹sc这个游戏存档（游戏编号为 PCSH10060）。点击这个游戏，备份，选择一个位置，如第七个。之后存档就会备份到</p><blockquote><p>ux0:data/savegames/PCSH10060/SLOT7</p></blockquote><p><img src="/img/2018/savegamepath.jpg" alt="备份路径"></p><p>这里。把这个文件夹放在别的PSV的这个路径，别人再使用存档管理器恢复存档，即可以使用我们分享出来的存档。同理，我们也可以这样使用别人的存档。</p><hr><p>　　问题：使用 savemgr 一备份就报错。</p><p>　　其实这才是我一开始要写的内容。因为用0.8版本，导致档案损坏，以至于我整个游戏重新安装。于是我就上网下载了个2.0汉化版，却出现 一备份就报错 的情况。关机重启也还是一样。</p><p>　　然后去 Github 下载7月1号更新的最新版本，还是一样。看看issue里面，也有人是这种情况，没法解决。但是发现了用原装2.0版本的话，安装好以后，机子重启一下就能正常使用了。备份恢复都可以。</p><p>　　吐槽：我网上查了很多，发现很少有人给官方的下载地址，github的直链，大多数都是给个百度云……感觉还是给像<br><a href="https://github.com/d3m3vilurr/vita-savemgr/releases/download/2.0.0/savemgr.vpk" target="_blank" rel="noopener">https://github.com/d3m3vilurr/vita-savemgr/releases/download/2.0.0/savemgr.vpk</a><br>这样好吧，直接浏览器就能下载，而且不用怕链接失效。最重要的是，我能知道这个是从哪里来的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;savemgr，存档管理器，在 Github 上项目名称为：vita-savemgr&lt;br&gt;
    
    </summary>
    
    
      <category term="游戏" scheme="https://powersee.GitHub.io/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>分析网络兼职诈骗过程</title>
    <link href="https://powersee.GitHub.io/2018/07/analysis-cheating-process/"/>
    <id>https://powersee.GitHub.io/2018/07/analysis-cheating-process/</id>
    <published>2018-07-29T10:57:00.000Z</published>
    <updated>2019-10-21T09:56:51.035Z</updated>
    
    <content type="html"><![CDATA[<p>此类消息一般多见于 QQ 群，毕竟对于个人来说，这个应该算是最大的曝光率了。<a id="more"></a>可见其宣传手段以 QQ 群为主。（后面我去加入，管理员的要求也印证了这一点）</p><p>从网络得知了一个 QQ 群号，我去加入。之后联系管理员了解工作。这时她的 QQ 性别一般都是女性，美女头像，20 多岁。（至于真假呢，呵呵。）然后她就会开始介绍工作，例如刷单、打字或者快递单录入，都会强调其简单、时间自由、收益不错等。之后问你要不要加入？回答要，然后就说需要帮她宣传，自然就是转发 QQ 群了。而我昨天的尝试，发现现在还得发空间说说和微信朋友圈了。</p><p>很不容易宣传完了，再联系她。这时就会说可以了，得去听一个老师的课，培训完才能工作。以前是 QT 语音和 YY 语音，现在可能这些不能用了吧，改成了第三方软件，估计是自己专门开发的。（应该是，我后来又去登录一次，这个软件连自己名称都不能改，只有那些‘老师’才能改你的名称。）注册好帐号之后，登录上去，等人差不多了，就开始讲了。先装模作样地介绍怎么工作，balabala 一堆之后。就开始要钱了，说需要花一百块左右买一个激活码，然后才能有一个工号，才可以接任务。然后就是各种游说。</p><p>这个时候，大多数人会在这放弃，但是此时想起之前转发这些也很不容易，甚至因为这个而被很多个 QQ 群踢了。此时放弃，岂不是前功尽弃了？或许有人就因此而选择了去交钱。而有的就还有些犹豫，于是去问之前那个介绍人。（例如我就去问，之前不是说不用交钱吗？）此时介绍人就会说，你放心啦，这个每个人都交的，我也交了，待会做几个任务就拿回来了。然后就发一些截图过来，证明她的话。这时就又增加了交钱的可能性。</p><p>那么，有人也许会想，交就交嘛，反正一会就拿回来了。然而，呵呵→_→。等交了钱，准备去完成那几个新手任务，这时这个老师就会让你去另一个老师那。来到新老师这，你以为可以开始了吗？不行的，接下来会说，你这是普通会员，只能接普通任务，要再交 298 成为钻石会员……又 balabala 之类，这时我相信大多数人会发现自己被骗了的。</p><p>但是，还是会有人想着，唉，前面都交钱了，这是放弃那钱不就打水漂了吗？所以还真有人又交了。这时据说就真的完成了，（只是据说，我并不清楚，好像也有继续要求交很多钱的。）可以接任务了。然后就准备大干一场吧。……过了不久，就会发现，一天耗费不少的精力，最后大概能赚个几块钱。又或者得经常去注册什么什么帐号，绑定银行卡身份证之类的。要把本钱赚回来基本不可能。</p><p>之后有人估计就算了，当作花钱买教训吧。而有的人呢，发现唯一能赚回本的方式，就是去拉人，据说拉人那人交的钱，有 70%能归拉人者，也就是客服。于是，一个新的客服就此诞生……</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;此类消息一般多见于 QQ 群，毕竟对于个人来说，这个应该算是最大的曝光率了。
    
    </summary>
    
    
      <category term="随笔" scheme="https://powersee.GitHub.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
